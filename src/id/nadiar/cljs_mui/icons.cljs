(ns id.nadiar.cljs-mui.icons
  (:refer-clojure :exclude [list repeat compare filter loop map print remove shuffle sort update comment])
  (:require [id.nadiar.cljs-mui.utils :refer [component-factory]]))

(def into-material-icon (partial component-factory js/MaterialUIIcons))

(defn ac-unit [& args] (into-material-icon "AcUnit" args))
(defn access-alarm [& args] (into-material-icon "AccessAlarm" args))
(defn access-alarms [& args] (into-material-icon "AccessAlarms" args))
(defn access-time [& args] (into-material-icon "AccessTime" args))
(defn accessibility [& args] (into-material-icon "Accessibility" args))
(defn accessible [& args] (into-material-icon "Accessible" args))
(defn account-balance [& args] (into-material-icon "AccountBalance" args))
(defn account-balance-wallet [& args] (into-material-icon "AccountBalanceWallet" args))
(defn account-box [& args] (into-material-icon "AccountBox" args))
(defn account-circle [& args] (into-material-icon "AccountCircle" args))
(defn adb [& args] (into-material-icon "Adb" args))
(defn add [& args] (into-material-icon "Add" args))
(defn add-a-photo [& args] (into-material-icon "AddAPhoto" args))
(defn add-alarm [& args] (into-material-icon "AddAlarm" args))
(defn add-alert [& args] (into-material-icon "AddAlert" args))
(defn add-box [& args] (into-material-icon "AddBox" args))
(defn add-circle [& args] (into-material-icon "AddCircle" args))
(defn add-circle-outline [& args] (into-material-icon "AddCircleOutline" args))
(defn add-location [& args] (into-material-icon "AddLocation" args))
(defn add-shopping-cart [& args] (into-material-icon "AddShoppingCart" args))
(defn add-to-photos [& args] (into-material-icon "AddToPhotos" args))
(defn add-to-queue [& args] (into-material-icon "AddToQueue" args))
(defn adjust [& args] (into-material-icon "Adjust" args))
(defn airline-seat-flat [& args] (into-material-icon "AirlineSeatFlat" args))
(defn airline-seat-flat-angled [& args] (into-material-icon "AirlineSeatFlatAngled" args))
(defn airline-seat-individual-suite [& args] (into-material-icon "AirlineSeatIndividualSuite" args))
(defn airline-seat-legroom-extra [& args] (into-material-icon "AirlineSeatLegroomExtra" args))
(defn airline-seat-legroom-normal [& args] (into-material-icon "AirlineSeatLegroomNormal" args))
(defn airline-seat-legroom-reduced [& args] (into-material-icon "AirlineSeatLegroomReduced" args))
(defn airline-seat-recline-extra [& args] (into-material-icon "AirlineSeatReclineExtra" args))
(defn airline-seat-recline-normal [& args] (into-material-icon "AirlineSeatReclineNormal" args))
(defn airplanemode-active [& args] (into-material-icon "AirplanemodeActive" args))
(defn airplanemode-inactive [& args] (into-material-icon "AirplanemodeInactive" args))
(defn airplay [& args] (into-material-icon "Airplay" args))
(defn airport-shuttle [& args] (into-material-icon "AirportShuttle" args))
(defn alarm [& args] (into-material-icon "Alarm" args))
(defn alarm-add [& args] (into-material-icon "AlarmAdd" args))
(defn alarm-off [& args] (into-material-icon "AlarmOff" args))
(defn alarm-on [& args] (into-material-icon "AlarmOn" args))
(defn album [& args] (into-material-icon "Album" args))
(defn all-inclusive [& args] (into-material-icon "AllInclusive" args))
(defn all-out [& args] (into-material-icon "AllOut" args))
(defn android [& args] (into-material-icon "Android" args))
(defn announcement [& args] (into-material-icon "Announcement" args))
(defn apps [& args] (into-material-icon "Apps" args))
(defn archive [& args] (into-material-icon "Archive" args))
(defn arrow-back [& args] (into-material-icon "ArrowBack" args))
(defn arrow-downward [& args] (into-material-icon "ArrowDownward" args))
(defn arrow-drop-down [& args] (into-material-icon "ArrowDropDown" args))
(defn arrow-drop-down-circle [& args] (into-material-icon "ArrowDropDownCircle" args))
(defn arrow-drop-up [& args] (into-material-icon "ArrowDropUp" args))
(defn arrow-forward [& args] (into-material-icon "ArrowForward" args))
(defn arrow-upward [& args] (into-material-icon "ArrowUpward" args))
(defn art-track [& args] (into-material-icon "ArtTrack" args))
(defn aspect-ratio [& args] (into-material-icon "AspectRatio" args))
(defn assessment [& args] (into-material-icon "Assessment" args))
(defn assignment [& args] (into-material-icon "Assignment" args))
(defn assignment-ind [& args] (into-material-icon "AssignmentInd" args))
(defn assignment-late [& args] (into-material-icon "AssignmentLate" args))
(defn assignment-return [& args] (into-material-icon "AssignmentReturn" args))
(defn assignment-returned [& args] (into-material-icon "AssignmentReturned" args))
(defn assignment-turned-in [& args] (into-material-icon "AssignmentTurnedIn" args))
(defn assistant [& args] (into-material-icon "Assistant" args))
(defn assistant-photo [& args] (into-material-icon "AssistantPhoto" args))
(defn attach-file [& args] (into-material-icon "AttachFile" args))
(defn attach-money [& args] (into-material-icon "AttachMoney" args))
(defn attachment [& args] (into-material-icon "Attachment" args))
(defn audiotrack [& args] (into-material-icon "Audiotrack" args))
(defn autorenew [& args] (into-material-icon "Autorenew" args))
(defn av-timer [& args] (into-material-icon "AvTimer" args))
(defn backspace [& args] (into-material-icon "Backspace" args))
(defn backup [& args] (into-material-icon "Backup" args))
(defn battery20 [& args] (into-material-icon "Battery20" args))
(defn battery30 [& args] (into-material-icon "Battery30" args))
(defn battery50 [& args] (into-material-icon "Battery50" args))
(defn battery60 [& args] (into-material-icon "Battery60" args))
(defn battery80 [& args] (into-material-icon "Battery80" args))
(defn battery90 [& args] (into-material-icon "Battery90" args))
(defn battery-alert [& args] (into-material-icon "BatteryAlert" args))
(defn battery-charging20 [& args] (into-material-icon "BatteryCharging20" args))
(defn battery-charging30 [& args] (into-material-icon "BatteryCharging30" args))
(defn battery-charging50 [& args] (into-material-icon "BatteryCharging50" args))
(defn battery-charging60 [& args] (into-material-icon "BatteryCharging60" args))
(defn battery-charging80 [& args] (into-material-icon "BatteryCharging80" args))
(defn battery-charging90 [& args] (into-material-icon "BatteryCharging90" args))
(defn battery-charging-full [& args] (into-material-icon "BatteryChargingFull" args))
(defn battery-full [& args] (into-material-icon "BatteryFull" args))
(defn battery-std [& args] (into-material-icon "BatteryStd" args))
(defn battery-unknown [& args] (into-material-icon "BatteryUnknown" args))
(defn beach-access [& args] (into-material-icon "BeachAccess" args))
(defn beenhere [& args] (into-material-icon "Beenhere" args))
(defn block [& args] (into-material-icon "Block" args))
(defn bluetooth [& args] (into-material-icon "Bluetooth" args))
(defn bluetooth-audio [& args] (into-material-icon "BluetoothAudio" args))
(defn bluetooth-connected [& args] (into-material-icon "BluetoothConnected" args))
(defn bluetooth-disabled [& args] (into-material-icon "BluetoothDisabled" args))
(defn bluetooth-searching [& args] (into-material-icon "BluetoothSearching" args))
(defn blur-circular [& args] (into-material-icon "BlurCircular" args))
(defn blur-linear [& args] (into-material-icon "BlurLinear" args))
(defn blur-off [& args] (into-material-icon "BlurOff" args))
(defn blur-on [& args] (into-material-icon "BlurOn" args))
(defn book [& args] (into-material-icon "Book" args))
(defn bookmark [& args] (into-material-icon "Bookmark" args))
(defn bookmark-border [& args] (into-material-icon "BookmarkBorder" args))
(defn border-all [& args] (into-material-icon "BorderAll" args))
(defn border-bottom [& args] (into-material-icon "BorderBottom" args))
(defn border-clear [& args] (into-material-icon "BorderClear" args))
(defn border-color [& args] (into-material-icon "BorderColor" args))
(defn border-horizontal [& args] (into-material-icon "BorderHorizontal" args))
(defn border-inner [& args] (into-material-icon "BorderInner" args))
(defn border-left [& args] (into-material-icon "BorderLeft" args))
(defn border-outer [& args] (into-material-icon "BorderOuter" args))
(defn border-right [& args] (into-material-icon "BorderRight" args))
(defn border-style [& args] (into-material-icon "BorderStyle" args))
(defn border-top [& args] (into-material-icon "BorderTop" args))
(defn border-vertical [& args] (into-material-icon "BorderVertical" args))
(defn branding-watermark [& args] (into-material-icon "BrandingWatermark" args))
(defn brightness1 [& args] (into-material-icon "Brightness1" args))
(defn brightness2 [& args] (into-material-icon "Brightness2" args))
(defn brightness3 [& args] (into-material-icon "Brightness3" args))
(defn brightness4 [& args] (into-material-icon "Brightness4" args))
(defn brightness5 [& args] (into-material-icon "Brightness5" args))
(defn brightness6 [& args] (into-material-icon "Brightness6" args))
(defn brightness7 [& args] (into-material-icon "Brightness7" args))
(defn brightness-auto [& args] (into-material-icon "BrightnessAuto" args))
(defn brightness-high [& args] (into-material-icon "BrightnessHigh" args))
(defn brightness-low [& args] (into-material-icon "BrightnessLow" args))
(defn brightness-medium [& args] (into-material-icon "BrightnessMedium" args))
(defn broken-image [& args] (into-material-icon "BrokenImage" args))
(defn brush [& args] (into-material-icon "Brush" args))
(defn bubble-chart [& args] (into-material-icon "BubbleChart" args))
(defn bug-report [& args] (into-material-icon "BugReport" args))
(defn build [& args] (into-material-icon "Build" args))
(defn burst-mode [& args] (into-material-icon "BurstMode" args))
(defn business [& args] (into-material-icon "Business" args))
(defn business-center [& args] (into-material-icon "BusinessCenter" args))
(defn cached [& args] (into-material-icon "Cached" args))
(defn cake [& args] (into-material-icon "Cake" args))
(defn call [& args] (into-material-icon "Call" args))
(defn call-end [& args] (into-material-icon "CallEnd" args))
(defn call-made [& args] (into-material-icon "CallMade" args))
(defn call-merge [& args] (into-material-icon "CallMerge" args))
(defn call-missed [& args] (into-material-icon "CallMissed" args))
(defn call-missed-outgoing [& args] (into-material-icon "CallMissedOutgoing" args))
(defn call-received [& args] (into-material-icon "CallReceived" args))
(defn call-split [& args] (into-material-icon "CallSplit" args))
(defn call-to-action [& args] (into-material-icon "CallToAction" args))
(defn camera [& args] (into-material-icon "Camera" args))
(defn camera-alt [& args] (into-material-icon "CameraAlt" args))
(defn camera-enhance [& args] (into-material-icon "CameraEnhance" args))
(defn camera-front [& args] (into-material-icon "CameraFront" args))
(defn camera-rear [& args] (into-material-icon "CameraRear" args))
(defn camera-roll [& args] (into-material-icon "CameraRoll" args))
(defn cancel [& args] (into-material-icon "Cancel" args))
(defn card-giftcard [& args] (into-material-icon "CardGiftcard" args))
(defn card-membership [& args] (into-material-icon "CardMembership" args))
(defn card-travel [& args] (into-material-icon "CardTravel" args))
(defn casino [& args] (into-material-icon "Casino" args))
(defn cast [& args] (into-material-icon "Cast" args))
(defn cast-connected [& args] (into-material-icon "CastConnected" args))
(defn center-focus-strong [& args] (into-material-icon "CenterFocusStrong" args))
(defn center-focus-weak [& args] (into-material-icon "CenterFocusWeak" args))
(defn change-history [& args] (into-material-icon "ChangeHistory" args))
(defn chat [& args] (into-material-icon "Chat" args))
(defn chat-bubble [& args] (into-material-icon "ChatBubble" args))
(defn chat-bubble-outline [& args] (into-material-icon "ChatBubbleOutline" args))
(defn check [& args] (into-material-icon "Check" args))
(defn check-box [& args] (into-material-icon "CheckBox" args))
(defn check-box-outline-blank [& args] (into-material-icon "CheckBoxOutlineBlank" args))
(defn check-circle [& args] (into-material-icon "CheckCircle" args))
(defn chevron-left [& args] (into-material-icon "ChevronLeft" args))
(defn chevron-right [& args] (into-material-icon "ChevronRight" args))
(defn child-care [& args] (into-material-icon "ChildCare" args))
(defn child-friendly [& args] (into-material-icon "ChildFriendly" args))
(defn chrome-reader-mode [& args] (into-material-icon "ChromeReaderMode" args))
(defn class [& args] (into-material-icon "Class" args))
(defn clear [& args] (into-material-icon "Clear" args))
(defn clear-all [& args] (into-material-icon "ClearAll" args))
(defn close [& args] (into-material-icon "Close" args))
(defn closed-caption [& args] (into-material-icon "ClosedCaption" args))
(defn cloud [& args] (into-material-icon "Cloud" args))
(defn cloud-circle [& args] (into-material-icon "CloudCircle" args))
(defn cloud-done [& args] (into-material-icon "CloudDone" args))
(defn cloud-download [& args] (into-material-icon "CloudDownload" args))
(defn cloud-off [& args] (into-material-icon "CloudOff" args))
(defn cloud-queue [& args] (into-material-icon "CloudQueue" args))
(defn cloud-upload [& args] (into-material-icon "CloudUpload" args))
(defn code [& args] (into-material-icon "Code" args))
(defn collections [& args] (into-material-icon "Collections" args))
(defn collections-bookmark [& args] (into-material-icon "CollectionsBookmark" args))
(defn color-lens [& args] (into-material-icon "ColorLens" args))
(defn colorize [& args] (into-material-icon "Colorize" args))
(defn comment [& args] (into-material-icon "Comment" args))
(defn compare [& args] (into-material-icon "Compare" args))
(defn compare-arrows [& args] (into-material-icon "CompareArrows" args))
(defn computer [& args] (into-material-icon "Computer" args))
(defn confirmation-number [& args] (into-material-icon "ConfirmationNumber" args))
(defn contact-mail [& args] (into-material-icon "ContactMail" args))
(defn contact-phone [& args] (into-material-icon "ContactPhone" args))
(defn contacts [& args] (into-material-icon "Contacts" args))
(defn content-copy [& args] (into-material-icon "ContentCopy" args))
(defn content-cut [& args] (into-material-icon "ContentCut" args))
(defn content-paste [& args] (into-material-icon "ContentPaste" args))
(defn control-point [& args] (into-material-icon "ControlPoint" args))
(defn control-point-duplicate [& args] (into-material-icon "ControlPointDuplicate" args))
(defn copyright [& args] (into-material-icon "Copyright" args))
(defn create [& args] (into-material-icon "Create" args))
(defn create-new-folder [& args] (into-material-icon "CreateNewFolder" args))
(defn credit-card [& args] (into-material-icon "CreditCard" args))
(defn crop [& args] (into-material-icon "Crop" args))
(defn crop169 [& args] (into-material-icon "Crop169" args))
(defn crop32 [& args] (into-material-icon "Crop32" args))
(defn crop54 [& args] (into-material-icon "Crop54" args))
(defn crop75 [& args] (into-material-icon "Crop75" args))
(defn crop-din [& args] (into-material-icon "CropDin" args))
(defn crop-free [& args] (into-material-icon "CropFree" args))
(defn crop-landscape [& args] (into-material-icon "CropLandscape" args))
(defn crop-original [& args] (into-material-icon "CropOriginal" args))
(defn crop-portrait [& args] (into-material-icon "CropPortrait" args))
(defn crop-rotate [& args] (into-material-icon "CropRotate" args))
(defn crop-square [& args] (into-material-icon "CropSquare" args))
(defn dashboard [& args] (into-material-icon "Dashboard" args))
(defn data-usage [& args] (into-material-icon "DataUsage" args))
(defn date-range [& args] (into-material-icon "DateRange" args))
(defn dehaze [& args] (into-material-icon "Dehaze" args))
(defn delete [& args] (into-material-icon "Delete" args))
(defn delete-forever [& args] (into-material-icon "DeleteForever" args))
(defn delete-sweep [& args] (into-material-icon "DeleteSweep" args))
(defn description [& args] (into-material-icon "Description" args))
(defn desktop-mac [& args] (into-material-icon "DesktopMac" args))
(defn desktop-windows [& args] (into-material-icon "DesktopWindows" args))
(defn details [& args] (into-material-icon "Details" args))
(defn developer-board [& args] (into-material-icon "DeveloperBoard" args))
(defn developer-mode [& args] (into-material-icon "DeveloperMode" args))
(defn device-hub [& args] (into-material-icon "DeviceHub" args))
(defn devices [& args] (into-material-icon "Devices" args))
(defn devices-other [& args] (into-material-icon "DevicesOther" args))
(defn dialer-sip [& args] (into-material-icon "DialerSip" args))
(defn dialpad [& args] (into-material-icon "Dialpad" args))
(defn directions [& args] (into-material-icon "Directions" args))
(defn directions-bike [& args] (into-material-icon "DirectionsBike" args))
(defn directions-boat [& args] (into-material-icon "DirectionsBoat" args))
(defn directions-bus [& args] (into-material-icon "DirectionsBus" args))
(defn directions-car [& args] (into-material-icon "DirectionsCar" args))
(defn directions-railway [& args] (into-material-icon "DirectionsRailway" args))
(defn directions-run [& args] (into-material-icon "DirectionsRun" args))
(defn directions-subway [& args] (into-material-icon "DirectionsSubway" args))
(defn directions-transit [& args] (into-material-icon "DirectionsTransit" args))
(defn directions-walk [& args] (into-material-icon "DirectionsWalk" args))
(defn disc-full [& args] (into-material-icon "DiscFull" args))
(defn dns [& args] (into-material-icon "Dns" args))
(defn do-not-disturb [& args] (into-material-icon "DoNotDisturb" args))
(defn do-not-disturb-alt [& args] (into-material-icon "DoNotDisturbAlt" args))
(defn do-not-disturb-off [& args] (into-material-icon "DoNotDisturbOff" args))
(defn do-not-disturb-on [& args] (into-material-icon "DoNotDisturbOn" args))
(defn dock [& args] (into-material-icon "Dock" args))
(defn domain [& args] (into-material-icon "Domain" args))
(defn done [& args] (into-material-icon "Done" args))
(defn done-all [& args] (into-material-icon "DoneAll" args))
(defn donut-large [& args] (into-material-icon "DonutLarge" args))
(defn donut-small [& args] (into-material-icon "DonutSmall" args))
(defn drafts [& args] (into-material-icon "Drafts" args))
(defn drag-handle [& args] (into-material-icon "DragHandle" args))
(defn drive-eta [& args] (into-material-icon "DriveEta" args))
(defn dvr [& args] (into-material-icon "Dvr" args))
(defn edit [& args] (into-material-icon "Edit" args))
(defn edit-location [& args] (into-material-icon "EditLocation" args))
(defn eject [& args] (into-material-icon "Eject" args))
(defn email [& args] (into-material-icon "Email" args))
(defn enhanced-encryption [& args] (into-material-icon "EnhancedEncryption" args))
(defn equalizer [& args] (into-material-icon "Equalizer" args))
(defn error [& args] (into-material-icon "Error" args))
(defn error-outline [& args] (into-material-icon "ErrorOutline" args))
(defn euro-symbol [& args] (into-material-icon "EuroSymbol" args))
(defn ev-station [& args] (into-material-icon "EvStation" args))
(defn event [& args] (into-material-icon "Event" args))
(defn event-available [& args] (into-material-icon "EventAvailable" args))
(defn event-busy [& args] (into-material-icon "EventBusy" args))
(defn event-note [& args] (into-material-icon "EventNote" args))
(defn event-seat [& args] (into-material-icon "EventSeat" args))
(defn exit-to-app [& args] (into-material-icon "ExitToApp" args))
(defn expand-less [& args] (into-material-icon "ExpandLess" args))
(defn expand-more [& args] (into-material-icon "ExpandMore" args))
(defn explicit [& args] (into-material-icon "Explicit" args))
(defn explore [& args] (into-material-icon "Explore" args))
(defn exposure [& args] (into-material-icon "Exposure" args))
(defn exposure-neg1 [& args] (into-material-icon "ExposureNeg1" args))
(defn exposure-neg2 [& args] (into-material-icon "ExposureNeg2" args))
(defn exposure-plus1 [& args] (into-material-icon "ExposurePlus1" args))
(defn exposure-plus2 [& args] (into-material-icon "ExposurePlus2" args))
(defn exposure-zero [& args] (into-material-icon "ExposureZero" args))
(defn extension [& args] (into-material-icon "Extension" args))
(defn face [& args] (into-material-icon "Face" args))
(defn fast-forward [& args] (into-material-icon "FastForward" args))
(defn fast-rewind [& args] (into-material-icon "FastRewind" args))
(defn favorite [& args] (into-material-icon "Favorite" args))
(defn favorite-border [& args] (into-material-icon "FavoriteBorder" args))
(defn featured-play-list [& args] (into-material-icon "FeaturedPlayList" args))
(defn featured-video [& args] (into-material-icon "FeaturedVideo" args))
(defn feedback [& args] (into-material-icon "Feedback" args))
(defn fiber-dvr [& args] (into-material-icon "FiberDvr" args))
(defn fiber-manual-record [& args] (into-material-icon "FiberManualRecord" args))
(defn fiber-new [& args] (into-material-icon "FiberNew" args))
(defn fiber-pin [& args] (into-material-icon "FiberPin" args))
(defn fiber-smart-record [& args] (into-material-icon "FiberSmartRecord" args))
(defn file-download [& args] (into-material-icon "FileDownload" args))
(defn file-upload [& args] (into-material-icon "FileUpload" args))
(defn filter [& args] (into-material-icon "Filter" args))
(defn filter1 [& args] (into-material-icon "Filter1" args))
(defn filter2 [& args] (into-material-icon "Filter2" args))
(defn filter3 [& args] (into-material-icon "Filter3" args))
(defn filter4 [& args] (into-material-icon "Filter4" args))
(defn filter5 [& args] (into-material-icon "Filter5" args))
(defn filter6 [& args] (into-material-icon "Filter6" args))
(defn filter7 [& args] (into-material-icon "Filter7" args))
(defn filter8 [& args] (into-material-icon "Filter8" args))
(defn filter9 [& args] (into-material-icon "Filter9" args))
(defn filter9-plus [& args] (into-material-icon "Filter9Plus" args))
(defn filter-b-and-w [& args] (into-material-icon "FilterBAndW" args))
(defn filter-center-focus [& args] (into-material-icon "FilterCenterFocus" args))
(defn filter-drama [& args] (into-material-icon "FilterDrama" args))
(defn filter-frames [& args] (into-material-icon "FilterFrames" args))
(defn filter-hdr [& args] (into-material-icon "FilterHdr" args))
(defn filter-list [& args] (into-material-icon "FilterList" args))
(defn filter-none [& args] (into-material-icon "FilterNone" args))
(defn filter-tilt-shift [& args] (into-material-icon "FilterTiltShift" args))
(defn filter-vintage [& args] (into-material-icon "FilterVintage" args))
(defn find-in-page [& args] (into-material-icon "FindInPage" args))
(defn find-replace [& args] (into-material-icon "FindReplace" args))
(defn fingerprint [& args] (into-material-icon "Fingerprint" args))
(defn first-page [& args] (into-material-icon "FirstPage" args))
(defn fitness-center [& args] (into-material-icon "FitnessCenter" args))
(defn flag [& args] (into-material-icon "Flag" args))
(defn flare [& args] (into-material-icon "Flare" args))
(defn flash-auto [& args] (into-material-icon "FlashAuto" args))
(defn flash-off [& args] (into-material-icon "FlashOff" args))
(defn flash-on [& args] (into-material-icon "FlashOn" args))
(defn flight [& args] (into-material-icon "Flight" args))
(defn flight-land [& args] (into-material-icon "FlightLand" args))
(defn flight-takeoff [& args] (into-material-icon "FlightTakeoff" args))
(defn flip [& args] (into-material-icon "Flip" args))
(defn flip-to-back [& args] (into-material-icon "FlipToBack" args))
(defn flip-to-front [& args] (into-material-icon "FlipToFront" args))
(defn folder [& args] (into-material-icon "Folder" args))
(defn folder-open [& args] (into-material-icon "FolderOpen" args))
(defn folder-shared [& args] (into-material-icon "FolderShared" args))
(defn folder-special [& args] (into-material-icon "FolderSpecial" args))
(defn font-download [& args] (into-material-icon "FontDownload" args))
(defn format-align-center [& args] (into-material-icon "FormatAlignCenter" args))
(defn format-align-justify [& args] (into-material-icon "FormatAlignJustify" args))
(defn format-align-left [& args] (into-material-icon "FormatAlignLeft" args))
(defn format-align-right [& args] (into-material-icon "FormatAlignRight" args))
(defn format-bold [& args] (into-material-icon "FormatBold" args))
(defn format-clear [& args] (into-material-icon "FormatClear" args))
(defn format-color-fill [& args] (into-material-icon "FormatColorFill" args))
(defn format-color-reset [& args] (into-material-icon "FormatColorReset" args))
(defn format-color-text [& args] (into-material-icon "FormatColorText" args))
(defn format-indent-decrease [& args] (into-material-icon "FormatIndentDecrease" args))
(defn format-indent-increase [& args] (into-material-icon "FormatIndentIncrease" args))
(defn format-italic [& args] (into-material-icon "FormatItalic" args))
(defn format-line-spacing [& args] (into-material-icon "FormatLineSpacing" args))
(defn format-list-bulleted [& args] (into-material-icon "FormatListBulleted" args))
(defn format-list-numbered [& args] (into-material-icon "FormatListNumbered" args))
(defn format-paint [& args] (into-material-icon "FormatPaint" args))
(defn format-quote [& args] (into-material-icon "FormatQuote" args))
(defn format-shapes [& args] (into-material-icon "FormatShapes" args))
(defn format-size [& args] (into-material-icon "FormatSize" args))
(defn format-strikethrough [& args] (into-material-icon "FormatStrikethrough" args))
(defn format-textdirection-l-to-r [& args] (into-material-icon "FormatTextdirectionLToR" args))
(defn format-textdirection-r-to-l [& args] (into-material-icon "FormatTextdirectionRToL" args))
(defn format-underlined [& args] (into-material-icon "FormatUnderlined" args))
(defn forum [& args] (into-material-icon "Forum" args))
(defn forward [& args] (into-material-icon "Forward" args))
(defn forward10 [& args] (into-material-icon "Forward10" args))
(defn forward30 [& args] (into-material-icon "Forward30" args))
(defn forward5 [& args] (into-material-icon "Forward5" args))
(defn free-breakfast [& args] (into-material-icon "FreeBreakfast" args))
(defn fullscreen [& args] (into-material-icon "Fullscreen" args))
(defn fullscreen-exit [& args] (into-material-icon "FullscreenExit" args))
(defn functions [& args] (into-material-icon "Functions" args))
(defn g-translate [& args] (into-material-icon "GTranslate" args))
(defn gamepad [& args] (into-material-icon "Gamepad" args))
(defn games [& args] (into-material-icon "Games" args))
(defn gavel [& args] (into-material-icon "Gavel" args))
(defn gesture [& args] (into-material-icon "Gesture" args))
(defn get-app [& args] (into-material-icon "GetApp" args))
(defn gif [& args] (into-material-icon "Gif" args))
(defn golf-course [& args] (into-material-icon "GolfCourse" args))
(defn gps-fixed [& args] (into-material-icon "GpsFixed" args))
(defn gps-not-fixed [& args] (into-material-icon "GpsNotFixed" args))
(defn gps-off [& args] (into-material-icon "GpsOff" args))
(defn grade [& args] (into-material-icon "Grade" args))
(defn gradient [& args] (into-material-icon "Gradient" args))
(defn grain [& args] (into-material-icon "Grain" args))
(defn graphic-eq [& args] (into-material-icon "GraphicEq" args))
(defn grid-off [& args] (into-material-icon "GridOff" args))
(defn grid-on [& args] (into-material-icon "GridOn" args))
(defn group [& args] (into-material-icon "Group" args))
(defn group-add [& args] (into-material-icon "GroupAdd" args))
(defn group-work [& args] (into-material-icon "GroupWork" args))
(defn hd [& args] (into-material-icon "Hd" args))
(defn hdr-off [& args] (into-material-icon "HdrOff" args))
(defn hdr-on [& args] (into-material-icon "HdrOn" args))
(defn hdr-strong [& args] (into-material-icon "HdrStrong" args))
(defn hdr-weak [& args] (into-material-icon "HdrWeak" args))
(defn headset [& args] (into-material-icon "Headset" args))
(defn headset-mic [& args] (into-material-icon "HeadsetMic" args))
(defn healing [& args] (into-material-icon "Healing" args))
(defn hearing [& args] (into-material-icon "Hearing" args))
(defn help [& args] (into-material-icon "Help" args))
(defn help-outline [& args] (into-material-icon "HelpOutline" args))
(defn high-quality [& args] (into-material-icon "HighQuality" args))
(defn highlight [& args] (into-material-icon "Highlight" args))
(defn highlight-off [& args] (into-material-icon "HighlightOff" args))
(defn history [& args] (into-material-icon "History" args))
(defn home [& args] (into-material-icon "Home" args))
(defn hot-tub [& args] (into-material-icon "HotTub" args))
(defn hotel [& args] (into-material-icon "Hotel" args))
(defn hourglass-empty [& args] (into-material-icon "HourglassEmpty" args))
(defn hourglass-full [& args] (into-material-icon "HourglassFull" args))
(defn http [& args] (into-material-icon "Http" args))
(defn https [& args] (into-material-icon "Https" args))
(defn image [& args] (into-material-icon "Image" args))
(defn image-aspect-ratio [& args] (into-material-icon "ImageAspectRatio" args))
(defn import-contacts [& args] (into-material-icon "ImportContacts" args))
(defn import-export [& args] (into-material-icon "ImportExport" args))
(defn important-devices [& args] (into-material-icon "ImportantDevices" args))
(defn inbox [& args] (into-material-icon "Inbox" args))
(defn indeterminate-check-box [& args] (into-material-icon "IndeterminateCheckBox" args))
(defn info [& args] (into-material-icon "Info" args))
(defn info-outline [& args] (into-material-icon "InfoOutline" args))
(defn input [& args] (into-material-icon "Input" args))
(defn insert-chart [& args] (into-material-icon "InsertChart" args))
(defn insert-comment [& args] (into-material-icon "InsertComment" args))
(defn insert-drive-file [& args] (into-material-icon "InsertDriveFile" args))
(defn insert-emoticon [& args] (into-material-icon "InsertEmoticon" args))
(defn insert-invitation [& args] (into-material-icon "InsertInvitation" args))
(defn insert-link [& args] (into-material-icon "InsertLink" args))
(defn insert-photo [& args] (into-material-icon "InsertPhoto" args))
(defn invert-colors [& args] (into-material-icon "InvertColors" args))
(defn invert-colors-off [& args] (into-material-icon "InvertColorsOff" args))
(defn iso [& args] (into-material-icon "Iso" args))
(defn keyboard [& args] (into-material-icon "Keyboard" args))
(defn keyboard-arrow-down [& args] (into-material-icon "KeyboardArrowDown" args))
(defn keyboard-arrow-left [& args] (into-material-icon "KeyboardArrowLeft" args))
(defn keyboard-arrow-right [& args] (into-material-icon "KeyboardArrowRight" args))
(defn keyboard-arrow-up [& args] (into-material-icon "KeyboardArrowUp" args))
(defn keyboard-backspace [& args] (into-material-icon "KeyboardBackspace" args))
(defn keyboard-capslock [& args] (into-material-icon "KeyboardCapslock" args))
(defn keyboard-hide [& args] (into-material-icon "KeyboardHide" args))
(defn keyboard-return [& args] (into-material-icon "KeyboardReturn" args))
(defn keyboard-tab [& args] (into-material-icon "KeyboardTab" args))
(defn keyboard-voice [& args] (into-material-icon "KeyboardVoice" args))
(defn kitchen [& args] (into-material-icon "Kitchen" args))
(defn label [& args] (into-material-icon "Label" args))
(defn label-outline [& args] (into-material-icon "LabelOutline" args))
(defn landscape [& args] (into-material-icon "Landscape" args))
(defn language [& args] (into-material-icon "Language" args))
(defn laptop [& args] (into-material-icon "Laptop" args))
(defn laptop-chromebook [& args] (into-material-icon "LaptopChromebook" args))
(defn laptop-mac [& args] (into-material-icon "LaptopMac" args))
(defn laptop-windows [& args] (into-material-icon "LaptopWindows" args))
(defn last-page [& args] (into-material-icon "LastPage" args))
(defn launch [& args] (into-material-icon "Launch" args))
(defn layers [& args] (into-material-icon "Layers" args))
(defn layers-clear [& args] (into-material-icon "LayersClear" args))
(defn leak-add [& args] (into-material-icon "LeakAdd" args))
(defn leak-remove [& args] (into-material-icon "LeakRemove" args))
(defn lens [& args] (into-material-icon "Lens" args))
(defn library-add [& args] (into-material-icon "LibraryAdd" args))
(defn library-books [& args] (into-material-icon "LibraryBooks" args))
(defn library-music [& args] (into-material-icon "LibraryMusic" args))
(defn lightbulb-outline [& args] (into-material-icon "LightbulbOutline" args))
(defn line-style [& args] (into-material-icon "LineStyle" args))
(defn line-weight [& args] (into-material-icon "LineWeight" args))
(defn linear-scale [& args] (into-material-icon "LinearScale" args))
(defn link [& args] (into-material-icon "Link" args))
(defn linked-camera [& args] (into-material-icon "LinkedCamera" args))
(defn list [& args] (into-material-icon "List" args))
(defn live-help [& args] (into-material-icon "LiveHelp" args))
(defn live-tv [& args] (into-material-icon "LiveTv" args))
(defn local-activity [& args] (into-material-icon "LocalActivity" args))
(defn local-airport [& args] (into-material-icon "LocalAirport" args))
(defn local-atm [& args] (into-material-icon "LocalAtm" args))
(defn local-bar [& args] (into-material-icon "LocalBar" args))
(defn local-cafe [& args] (into-material-icon "LocalCafe" args))
(defn local-car-wash [& args] (into-material-icon "LocalCarWash" args))
(defn local-convenience-store [& args] (into-material-icon "LocalConvenienceStore" args))
(defn local-dining [& args] (into-material-icon "LocalDining" args))
(defn local-drink [& args] (into-material-icon "LocalDrink" args))
(defn local-florist [& args] (into-material-icon "LocalFlorist" args))
(defn local-gas-station [& args] (into-material-icon "LocalGasStation" args))
(defn local-grocery-store [& args] (into-material-icon "LocalGroceryStore" args))
(defn local-hospital [& args] (into-material-icon "LocalHospital" args))
(defn local-hotel [& args] (into-material-icon "LocalHotel" args))
(defn local-laundry-service [& args] (into-material-icon "LocalLaundryService" args))
(defn local-library [& args] (into-material-icon "LocalLibrary" args))
(defn local-mall [& args] (into-material-icon "LocalMall" args))
(defn local-movies [& args] (into-material-icon "LocalMovies" args))
(defn local-offer [& args] (into-material-icon "LocalOffer" args))
(defn local-parking [& args] (into-material-icon "LocalParking" args))
(defn local-pharmacy [& args] (into-material-icon "LocalPharmacy" args))
(defn local-phone [& args] (into-material-icon "LocalPhone" args))
(defn local-pizza [& args] (into-material-icon "LocalPizza" args))
(defn local-play [& args] (into-material-icon "LocalPlay" args))
(defn local-post-office [& args] (into-material-icon "LocalPostOffice" args))
(defn local-printshop [& args] (into-material-icon "LocalPrintshop" args))
(defn local-see [& args] (into-material-icon "LocalSee" args))
(defn local-shipping [& args] (into-material-icon "LocalShipping" args))
(defn local-taxi [& args] (into-material-icon "LocalTaxi" args))
(defn location-city [& args] (into-material-icon "LocationCity" args))
(defn location-disabled [& args] (into-material-icon "LocationDisabled" args))
(defn location-off [& args] (into-material-icon "LocationOff" args))
(defn location-on [& args] (into-material-icon "LocationOn" args))
(defn location-searching [& args] (into-material-icon "LocationSearching" args))
(defn lock [& args] (into-material-icon "Lock" args))
(defn lock-open [& args] (into-material-icon "LockOpen" args))
(defn lock-outline [& args] (into-material-icon "LockOutline" args))
(defn looks [& args] (into-material-icon "Looks" args))
(defn looks3 [& args] (into-material-icon "Looks3" args))
(defn looks4 [& args] (into-material-icon "Looks4" args))
(defn looks5 [& args] (into-material-icon "Looks5" args))
(defn looks6 [& args] (into-material-icon "Looks6" args))
(defn looks-one [& args] (into-material-icon "LooksOne" args))
(defn looks-two [& args] (into-material-icon "LooksTwo" args))
(defn loop [& args] (into-material-icon "Loop" args))
(defn loupe [& args] (into-material-icon "Loupe" args))
(defn low-priority [& args] (into-material-icon "LowPriority" args))
(defn loyalty [& args] (into-material-icon "Loyalty" args))
(defn mail [& args] (into-material-icon "Mail" args))
(defn mail-outline [& args] (into-material-icon "MailOutline" args))
(defn map [& args] (into-material-icon "Map" args))
(defn markunread [& args] (into-material-icon "Markunread" args))
(defn markunread-mailbox [& args] (into-material-icon "MarkunreadMailbox" args))
(defn memory [& args] (into-material-icon "Memory" args))
(defn menu [& args] (into-material-icon "Menu" args))
(defn merge-type [& args] (into-material-icon "MergeType" args))
(defn message [& args] (into-material-icon "Message" args))
(defn mic [& args] (into-material-icon "Mic" args))
(defn mic-none [& args] (into-material-icon "MicNone" args))
(defn mic-off [& args] (into-material-icon "MicOff" args))
(defn mms [& args] (into-material-icon "Mms" args))
(defn mode-comment [& args] (into-material-icon "ModeComment" args))
(defn mode-edit [& args] (into-material-icon "ModeEdit" args))
(defn monetization-on [& args] (into-material-icon "MonetizationOn" args))
(defn money-off [& args] (into-material-icon "MoneyOff" args))
(defn monochrome-photos [& args] (into-material-icon "MonochromePhotos" args))
(defn mood [& args] (into-material-icon "Mood" args))
(defn mood-bad [& args] (into-material-icon "MoodBad" args))
(defn more [& args] (into-material-icon "More" args))
(defn more-horiz [& args] (into-material-icon "MoreHoriz" args))
(defn more-vert [& args] (into-material-icon "MoreVert" args))
(defn motorcycle [& args] (into-material-icon "Motorcycle" args))
(defn mouse [& args] (into-material-icon "Mouse" args))
(defn move-to-inbox [& args] (into-material-icon "MoveToInbox" args))
(defn movie [& args] (into-material-icon "Movie" args))
(defn movie-creation [& args] (into-material-icon "MovieCreation" args))
(defn movie-filter [& args] (into-material-icon "MovieFilter" args))
(defn multiline-chart [& args] (into-material-icon "MultilineChart" args))
(defn music-note [& args] (into-material-icon "MusicNote" args))
(defn music-video [& args] (into-material-icon "MusicVideo" args))
(defn my-location [& args] (into-material-icon "MyLocation" args))
(defn nature [& args] (into-material-icon "Nature" args))
(defn nature-people [& args] (into-material-icon "NaturePeople" args))
(defn navigate-before [& args] (into-material-icon "NavigateBefore" args))
(defn navigate-next [& args] (into-material-icon "NavigateNext" args))
(defn navigation [& args] (into-material-icon "Navigation" args))
(defn near-me [& args] (into-material-icon "NearMe" args))
(defn network-cell [& args] (into-material-icon "NetworkCell" args))
(defn network-check [& args] (into-material-icon "NetworkCheck" args))
(defn network-locked [& args] (into-material-icon "NetworkLocked" args))
(defn network-wifi [& args] (into-material-icon "NetworkWifi" args))
(defn new-releases [& args] (into-material-icon "NewReleases" args))
(defn next-week [& args] (into-material-icon "NextWeek" args))
(defn nfc [& args] (into-material-icon "Nfc" args))
(defn no-encryption [& args] (into-material-icon "NoEncryption" args))
(defn no-sim [& args] (into-material-icon "NoSim" args))
(defn not-interested [& args] (into-material-icon "NotInterested" args))
(defn note [& args] (into-material-icon "Note" args))
(defn note-add [& args] (into-material-icon "NoteAdd" args))
(defn notifications [& args] (into-material-icon "Notifications" args))
(defn notifications-active [& args] (into-material-icon "NotificationsActive" args))
(defn notifications-none [& args] (into-material-icon "NotificationsNone" args))
(defn notifications-off [& args] (into-material-icon "NotificationsOff" args))
(defn notifications-paused [& args] (into-material-icon "NotificationsPaused" args))
(defn offline-pin [& args] (into-material-icon "OfflinePin" args))
(defn ondemand-video [& args] (into-material-icon "OndemandVideo" args))
(defn opacity [& args] (into-material-icon "Opacity" args))
(defn open-in-browser [& args] (into-material-icon "OpenInBrowser" args))
(defn open-in-new [& args] (into-material-icon "OpenInNew" args))
(defn open-with [& args] (into-material-icon "OpenWith" args))
(defn pages [& args] (into-material-icon "Pages" args))
(defn pageview [& args] (into-material-icon "Pageview" args))
(defn palette [& args] (into-material-icon "Palette" args))
(defn pan-tool [& args] (into-material-icon "PanTool" args))
(defn panorama [& args] (into-material-icon "Panorama" args))
(defn panorama-fish-eye [& args] (into-material-icon "PanoramaFishEye" args))
(defn panorama-horizontal [& args] (into-material-icon "PanoramaHorizontal" args))
(defn panorama-vertical [& args] (into-material-icon "PanoramaVertical" args))
(defn panorama-wide-angle [& args] (into-material-icon "PanoramaWideAngle" args))
(defn party-mode [& args] (into-material-icon "PartyMode" args))
(defn pause [& args] (into-material-icon "Pause" args))
(defn pause-circle-filled [& args] (into-material-icon "PauseCircleFilled" args))
(defn pause-circle-outline [& args] (into-material-icon "PauseCircleOutline" args))
(defn payment [& args] (into-material-icon "Payment" args))
(defn people [& args] (into-material-icon "People" args))
(defn people-outline [& args] (into-material-icon "PeopleOutline" args))
(defn perm-camera-mic [& args] (into-material-icon "PermCameraMic" args))
(defn perm-contact-calendar [& args] (into-material-icon "PermContactCalendar" args))
(defn perm-data-setting [& args] (into-material-icon "PermDataSetting" args))
(defn perm-device-information [& args] (into-material-icon "PermDeviceInformation" args))
(defn perm-identity [& args] (into-material-icon "PermIdentity" args))
(defn perm-media [& args] (into-material-icon "PermMedia" args))
(defn perm-phone-msg [& args] (into-material-icon "PermPhoneMsg" args))
(defn perm-scan-wifi [& args] (into-material-icon "PermScanWifi" args))
(defn person [& args] (into-material-icon "Person" args))
(defn person-add [& args] (into-material-icon "PersonAdd" args))
(defn person-outline [& args] (into-material-icon "PersonOutline" args))
(defn person-pin [& args] (into-material-icon "PersonPin" args))
(defn person-pin-circle [& args] (into-material-icon "PersonPinCircle" args))
(defn personal-video [& args] (into-material-icon "PersonalVideo" args))
(defn pets [& args] (into-material-icon "Pets" args))
(defn phone [& args] (into-material-icon "Phone" args))
(defn phone-android [& args] (into-material-icon "PhoneAndroid" args))
(defn phone-bluetooth-speaker [& args] (into-material-icon "PhoneBluetoothSpeaker" args))
(defn phone-forwarded [& args] (into-material-icon "PhoneForwarded" args))
(defn phone-in-talk [& args] (into-material-icon "PhoneInTalk" args))
(defn phone-iphone [& args] (into-material-icon "PhoneIphone" args))
(defn phone-locked [& args] (into-material-icon "PhoneLocked" args))
(defn phone-missed [& args] (into-material-icon "PhoneMissed" args))
(defn phone-paused [& args] (into-material-icon "PhonePaused" args))
(defn phonelink [& args] (into-material-icon "Phonelink" args))
(defn phonelink-erase [& args] (into-material-icon "PhonelinkErase" args))
(defn phonelink-lock [& args] (into-material-icon "PhonelinkLock" args))
(defn phonelink-off [& args] (into-material-icon "PhonelinkOff" args))
(defn phonelink-ring [& args] (into-material-icon "PhonelinkRing" args))
(defn phonelink-setup [& args] (into-material-icon "PhonelinkSetup" args))
(defn photo [& args] (into-material-icon "Photo" args))
(defn photo-album [& args] (into-material-icon "PhotoAlbum" args))
(defn photo-camera [& args] (into-material-icon "PhotoCamera" args))
(defn photo-filter [& args] (into-material-icon "PhotoFilter" args))
(defn photo-library [& args] (into-material-icon "PhotoLibrary" args))
(defn photo-size-select-actual [& args] (into-material-icon "PhotoSizeSelectActual" args))
(defn photo-size-select-large [& args] (into-material-icon "PhotoSizeSelectLarge" args))
(defn photo-size-select-small [& args] (into-material-icon "PhotoSizeSelectSmall" args))
(defn picture-as-pdf [& args] (into-material-icon "PictureAsPdf" args))
(defn picture-in-picture [& args] (into-material-icon "PictureInPicture" args))
(defn picture-in-picture-alt [& args] (into-material-icon "PictureInPictureAlt" args))
(defn pie-chart [& args] (into-material-icon "PieChart" args))
(defn pie-chart-outlined [& args] (into-material-icon "PieChartOutlined" args))
(defn pin-drop [& args] (into-material-icon "PinDrop" args))
(defn place [& args] (into-material-icon "Place" args))
(defn play-arrow [& args] (into-material-icon "PlayArrow" args))
(defn play-circle-filled [& args] (into-material-icon "PlayCircleFilled" args))
(defn play-circle-outline [& args] (into-material-icon "PlayCircleOutline" args))
(defn play-for-work [& args] (into-material-icon "PlayForWork" args))
(defn playlist-add [& args] (into-material-icon "PlaylistAdd" args))
(defn playlist-add-check [& args] (into-material-icon "PlaylistAddCheck" args))
(defn playlist-play [& args] (into-material-icon "PlaylistPlay" args))
(defn plus-one [& args] (into-material-icon "PlusOne" args))
(defn poll [& args] (into-material-icon "Poll" args))
(defn polymer [& args] (into-material-icon "Polymer" args))
(defn pool [& args] (into-material-icon "Pool" args))
(defn portable-wifi-off [& args] (into-material-icon "PortableWifiOff" args))
(defn portrait [& args] (into-material-icon "Portrait" args))
(defn power [& args] (into-material-icon "Power" args))
(defn power-input [& args] (into-material-icon "PowerInput" args))
(defn power-settings-new [& args] (into-material-icon "PowerSettingsNew" args))
(defn pregnant-woman [& args] (into-material-icon "PregnantWoman" args))
(defn present-to-all [& args] (into-material-icon "PresentToAll" args))
(defn print [& args] (into-material-icon "Print" args))
(defn priority-high [& args] (into-material-icon "PriorityHigh" args))
(defn public [& args] (into-material-icon "Public" args))
(defn publish [& args] (into-material-icon "Publish" args))
(defn query-builder [& args] (into-material-icon "QueryBuilder" args))
(defn question-answer [& args] (into-material-icon "QuestionAnswer" args))
(defn queue [& args] (into-material-icon "Queue" args))
(defn queue-music [& args] (into-material-icon "QueueMusic" args))
(defn queue-play-next [& args] (into-material-icon "QueuePlayNext" args))
(defn radio [& args] (into-material-icon "Radio" args))
(defn radio-button-checked [& args] (into-material-icon "RadioButtonChecked" args))
(defn radio-button-unchecked [& args] (into-material-icon "RadioButtonUnchecked" args))
(defn rate-review [& args] (into-material-icon "RateReview" args))
(defn receipt [& args] (into-material-icon "Receipt" args))
(defn recent-actors [& args] (into-material-icon "RecentActors" args))
(defn record-voice-over [& args] (into-material-icon "RecordVoiceOver" args))
(defn redeem [& args] (into-material-icon "Redeem" args))
(defn redo [& args] (into-material-icon "Redo" args))
(defn refresh [& args] (into-material-icon "Refresh" args))
(defn remove [& args] (into-material-icon "Remove" args))
(defn remove-circle [& args] (into-material-icon "RemoveCircle" args))
(defn remove-circle-outline [& args] (into-material-icon "RemoveCircleOutline" args))
(defn remove-from-queue [& args] (into-material-icon "RemoveFromQueue" args))
(defn remove-red-eye [& args] (into-material-icon "RemoveRedEye" args))
(defn remove-shopping-cart [& args] (into-material-icon "RemoveShoppingCart" args))
(defn reorder [& args] (into-material-icon "Reorder" args))
(defn repeat [& args] (into-material-icon "Repeat" args))
(defn repeat-one [& args] (into-material-icon "RepeatOne" args))
(defn replay [& args] (into-material-icon "Replay" args))
(defn replay10 [& args] (into-material-icon "Replay10" args))
(defn replay30 [& args] (into-material-icon "Replay30" args))
(defn replay5 [& args] (into-material-icon "Replay5" args))
(defn reply [& args] (into-material-icon "Reply" args))
(defn reply-all [& args] (into-material-icon "ReplyAll" args))
(defn report [& args] (into-material-icon "Report" args))
(defn report-problem [& args] (into-material-icon "ReportProblem" args))
(defn restaurant [& args] (into-material-icon "Restaurant" args))
(defn restaurant-menu [& args] (into-material-icon "RestaurantMenu" args))
(defn restore [& args] (into-material-icon "Restore" args))
(defn restore-page [& args] (into-material-icon "RestorePage" args))
(defn ring-volume [& args] (into-material-icon "RingVolume" args))
(defn room [& args] (into-material-icon "Room" args))
(defn room-service [& args] (into-material-icon "RoomService" args))
(defn rotate90-degrees-ccw [& args] (into-material-icon "Rotate90DegreesCcw" args))
(defn rotate-left [& args] (into-material-icon "RotateLeft" args))
(defn rotate-right [& args] (into-material-icon "RotateRight" args))
(defn rounded-corner [& args] (into-material-icon "RoundedCorner" args))
(defn router [& args] (into-material-icon "Router" args))
(defn rowing [& args] (into-material-icon "Rowing" args))
(defn rss-feed [& args] (into-material-icon "RssFeed" args))
(defn rv-hookup [& args] (into-material-icon "RvHookup" args))
(defn satellite [& args] (into-material-icon "Satellite" args))
(defn save [& args] (into-material-icon "Save" args))
(defn scanner [& args] (into-material-icon "Scanner" args))
(defn schedule [& args] (into-material-icon "Schedule" args))
(defn school [& args] (into-material-icon "School" args))
(defn screen-lock-landscape [& args] (into-material-icon "ScreenLockLandscape" args))
(defn screen-lock-portrait [& args] (into-material-icon "ScreenLockPortrait" args))
(defn screen-lock-rotation [& args] (into-material-icon "ScreenLockRotation" args))
(defn screen-rotation [& args] (into-material-icon "ScreenRotation" args))
(defn screen-share [& args] (into-material-icon "ScreenShare" args))
(defn sd-card [& args] (into-material-icon "SdCard" args))
(defn sd-storage [& args] (into-material-icon "SdStorage" args))
(defn search [& args] (into-material-icon "Search" args))
(defn security [& args] (into-material-icon "Security" args))
(defn select-all [& args] (into-material-icon "SelectAll" args))
(defn send [& args] (into-material-icon "Send" args))
(defn sentiment-dissatisfied [& args] (into-material-icon "SentimentDissatisfied" args))
(defn sentiment-neutral [& args] (into-material-icon "SentimentNeutral" args))
(defn sentiment-satisfied [& args] (into-material-icon "SentimentSatisfied" args))
(defn sentiment-very-dissatisfied [& args] (into-material-icon "SentimentVeryDissatisfied" args))
(defn sentiment-very-satisfied [& args] (into-material-icon "SentimentVerySatisfied" args))
(defn settings [& args] (into-material-icon "Settings" args))
(defn settings-applications [& args] (into-material-icon "SettingsApplications" args))
(defn settings-backup-restore [& args] (into-material-icon "SettingsBackupRestore" args))
(defn settings-bluetooth [& args] (into-material-icon "SettingsBluetooth" args))
(defn settings-brightness [& args] (into-material-icon "SettingsBrightness" args))
(defn settings-cell [& args] (into-material-icon "SettingsCell" args))
(defn settings-ethernet [& args] (into-material-icon "SettingsEthernet" args))
(defn settings-input-antenna [& args] (into-material-icon "SettingsInputAntenna" args))
(defn settings-input-component [& args] (into-material-icon "SettingsInputComponent" args))
(defn settings-input-composite [& args] (into-material-icon "SettingsInputComposite" args))
(defn settings-input-hdmi [& args] (into-material-icon "SettingsInputHdmi" args))
(defn settings-input-svideo [& args] (into-material-icon "SettingsInputSvideo" args))
(defn settings-overscan [& args] (into-material-icon "SettingsOverscan" args))
(defn settings-phone [& args] (into-material-icon "SettingsPhone" args))
(defn settings-power [& args] (into-material-icon "SettingsPower" args))
(defn settings-remote [& args] (into-material-icon "SettingsRemote" args))
(defn settings-system-daydream [& args] (into-material-icon "SettingsSystemDaydream" args))
(defn settings-voice [& args] (into-material-icon "SettingsVoice" args))
(defn share [& args] (into-material-icon "Share" args))
(defn shop [& args] (into-material-icon "Shop" args))
(defn shop-two [& args] (into-material-icon "ShopTwo" args))
(defn shopping-basket [& args] (into-material-icon "ShoppingBasket" args))
(defn shopping-cart [& args] (into-material-icon "ShoppingCart" args))
(defn short-text [& args] (into-material-icon "ShortText" args))
(defn show-chart [& args] (into-material-icon "ShowChart" args))
(defn shuffle [& args] (into-material-icon "Shuffle" args))
(defn signal-cellular0-bar [& args] (into-material-icon "SignalCellular0Bar" args))
(defn signal-cellular1-bar [& args] (into-material-icon "SignalCellular1Bar" args))
(defn signal-cellular2-bar [& args] (into-material-icon "SignalCellular2Bar" args))
(defn signal-cellular3-bar [& args] (into-material-icon "SignalCellular3Bar" args))
(defn signal-cellular4-bar [& args] (into-material-icon "SignalCellular4Bar" args))
(defn
  signal-cellular-connected-no-internet0-bar
  [& args]
  (into-material-icon "SignalCellularConnectedNoInternet0Bar" args))
(defn
  signal-cellular-connected-no-internet1-bar
  [& args]
  (into-material-icon "SignalCellularConnectedNoInternet1Bar" args))
(defn
  signal-cellular-connected-no-internet2-bar
  [& args]
  (into-material-icon "SignalCellularConnectedNoInternet2Bar" args))
(defn
  signal-cellular-connected-no-internet3-bar
  [& args]
  (into-material-icon "SignalCellularConnectedNoInternet3Bar" args))
(defn
  signal-cellular-connected-no-internet4-bar
  [& args]
  (into-material-icon "SignalCellularConnectedNoInternet4Bar" args))
(defn signal-cellular-no-sim [& args] (into-material-icon "SignalCellularNoSim" args))
(defn signal-cellular-null [& args] (into-material-icon "SignalCellularNull" args))
(defn signal-cellular-off [& args] (into-material-icon "SignalCellularOff" args))
(defn signal-wifi0-bar [& args] (into-material-icon "SignalWifi0Bar" args))
(defn signal-wifi1-bar [& args] (into-material-icon "SignalWifi1Bar" args))
(defn signal-wifi1-bar-lock [& args] (into-material-icon "SignalWifi1BarLock" args))
(defn signal-wifi2-bar [& args] (into-material-icon "SignalWifi2Bar" args))
(defn signal-wifi2-bar-lock [& args] (into-material-icon "SignalWifi2BarLock" args))
(defn signal-wifi3-bar [& args] (into-material-icon "SignalWifi3Bar" args))
(defn signal-wifi3-bar-lock [& args] (into-material-icon "SignalWifi3BarLock" args))
(defn signal-wifi4-bar [& args] (into-material-icon "SignalWifi4Bar" args))
(defn signal-wifi4-bar-lock [& args] (into-material-icon "SignalWifi4BarLock" args))
(defn signal-wifi-off [& args] (into-material-icon "SignalWifiOff" args))
(defn sim-card [& args] (into-material-icon "SimCard" args))
(defn sim-card-alert [& args] (into-material-icon "SimCardAlert" args))
(defn skip-next [& args] (into-material-icon "SkipNext" args))
(defn skip-previous [& args] (into-material-icon "SkipPrevious" args))
(defn slideshow [& args] (into-material-icon "Slideshow" args))
(defn slow-motion-video [& args] (into-material-icon "SlowMotionVideo" args))
(defn smartphone [& args] (into-material-icon "Smartphone" args))
(defn smoke-free [& args] (into-material-icon "SmokeFree" args))
(defn smoking-rooms [& args] (into-material-icon "SmokingRooms" args))
(defn sms [& args] (into-material-icon "Sms" args))
(defn sms-failed [& args] (into-material-icon "SmsFailed" args))
(defn snooze [& args] (into-material-icon "Snooze" args))
(defn sort [& args] (into-material-icon "Sort" args))
(defn sort-by-alpha [& args] (into-material-icon "SortByAlpha" args))
(defn spa [& args] (into-material-icon "Spa" args))
(defn space-bar [& args] (into-material-icon "SpaceBar" args))
(defn speaker [& args] (into-material-icon "Speaker" args))
(defn speaker-group [& args] (into-material-icon "SpeakerGroup" args))
(defn speaker-notes [& args] (into-material-icon "SpeakerNotes" args))
(defn speaker-notes-off [& args] (into-material-icon "SpeakerNotesOff" args))
(defn speaker-phone [& args] (into-material-icon "SpeakerPhone" args))
(defn spellcheck [& args] (into-material-icon "Spellcheck" args))
(defn star [& args] (into-material-icon "Star" args))
(defn star-border [& args] (into-material-icon "StarBorder" args))
(defn star-half [& args] (into-material-icon "StarHalf" args))
(defn stars [& args] (into-material-icon "Stars" args))
(defn stay-current-landscape [& args] (into-material-icon "StayCurrentLandscape" args))
(defn stay-current-portrait [& args] (into-material-icon "StayCurrentPortrait" args))
(defn stay-primary-landscape [& args] (into-material-icon "StayPrimaryLandscape" args))
(defn stay-primary-portrait [& args] (into-material-icon "StayPrimaryPortrait" args))
(defn stop [& args] (into-material-icon "Stop" args))
(defn stop-screen-share [& args] (into-material-icon "StopScreenShare" args))
(defn storage [& args] (into-material-icon "Storage" args))
(defn store [& args] (into-material-icon "Store" args))
(defn store-mall-directory [& args] (into-material-icon "StoreMallDirectory" args))
(defn straighten [& args] (into-material-icon "Straighten" args))
(defn streetview [& args] (into-material-icon "Streetview" args))
(defn strikethrough-s [& args] (into-material-icon "StrikethroughS" args))
(defn style [& args] (into-material-icon "Style" args))
(defn subdirectory-arrow-left [& args] (into-material-icon "SubdirectoryArrowLeft" args))
(defn subdirectory-arrow-right [& args] (into-material-icon "SubdirectoryArrowRight" args))
(defn subject [& args] (into-material-icon "Subject" args))
(defn subscriptions [& args] (into-material-icon "Subscriptions" args))
(defn subtitles [& args] (into-material-icon "Subtitles" args))
(defn subway [& args] (into-material-icon "Subway" args))
(defn supervisor-account [& args] (into-material-icon "SupervisorAccount" args))
(defn surround-sound [& args] (into-material-icon "SurroundSound" args))
(defn swap-calls [& args] (into-material-icon "SwapCalls" args))
(defn swap-horiz [& args] (into-material-icon "SwapHoriz" args))
(defn swap-vert [& args] (into-material-icon "SwapVert" args))
(defn swap-vertical-circle [& args] (into-material-icon "SwapVerticalCircle" args))
(defn switch-camera [& args] (into-material-icon "SwitchCamera" args))
(defn switch-video [& args] (into-material-icon "SwitchVideo" args))
(defn sync [& args] (into-material-icon "Sync" args))
(defn sync-disabled [& args] (into-material-icon "SyncDisabled" args))
(defn sync-problem [& args] (into-material-icon "SyncProblem" args))
(defn system-update [& args] (into-material-icon "SystemUpdate" args))
(defn system-update-alt [& args] (into-material-icon "SystemUpdateAlt" args))
(defn tab [& args] (into-material-icon "Tab" args))
(defn tab-unselected [& args] (into-material-icon "TabUnselected" args))
(defn tablet [& args] (into-material-icon "Tablet" args))
(defn tablet-android [& args] (into-material-icon "TabletAndroid" args))
(defn tablet-mac [& args] (into-material-icon "TabletMac" args))
(defn tag-faces [& args] (into-material-icon "TagFaces" args))
(defn tap-and-play [& args] (into-material-icon "TapAndPlay" args))
(defn terrain [& args] (into-material-icon "Terrain" args))
(defn text-fields [& args] (into-material-icon "TextFields" args))
(defn text-format [& args] (into-material-icon "TextFormat" args))
(defn textsms [& args] (into-material-icon "Textsms" args))
(defn texture [& args] (into-material-icon "Texture" args))
(defn theaters [& args] (into-material-icon "Theaters" args))
(defn three-d-rotation [& args] (into-material-icon "ThreeDRotation" args))
(defn thumb-down [& args] (into-material-icon "ThumbDown" args))
(defn thumb-up [& args] (into-material-icon "ThumbUp" args))
(defn thumbs-up-down [& args] (into-material-icon "ThumbsUpDown" args))
(defn time-to-leave [& args] (into-material-icon "TimeToLeave" args))
(defn timelapse [& args] (into-material-icon "Timelapse" args))
(defn timeline [& args] (into-material-icon "Timeline" args))
(defn timer [& args] (into-material-icon "Timer" args))
(defn timer10 [& args] (into-material-icon "Timer10" args))
(defn timer3 [& args] (into-material-icon "Timer3" args))
(defn timer-off [& args] (into-material-icon "TimerOff" args))
(defn title [& args] (into-material-icon "Title" args))
(defn toc [& args] (into-material-icon "Toc" args))
(defn today [& args] (into-material-icon "Today" args))
(defn toll [& args] (into-material-icon "Toll" args))
(defn tonality [& args] (into-material-icon "Tonality" args))
(defn touch-app [& args] (into-material-icon "TouchApp" args))
(defn toys [& args] (into-material-icon "Toys" args))
(defn track-changes [& args] (into-material-icon "TrackChanges" args))
(defn traffic [& args] (into-material-icon "Traffic" args))
(defn train [& args] (into-material-icon "Train" args))
(defn tram [& args] (into-material-icon "Tram" args))
(defn transfer-within-a-station [& args] (into-material-icon "TransferWithinAStation" args))
(defn transform [& args] (into-material-icon "Transform" args))
(defn translate [& args] (into-material-icon "Translate" args))
(defn trending-down [& args] (into-material-icon "TrendingDown" args))
(defn trending-flat [& args] (into-material-icon "TrendingFlat" args))
(defn trending-up [& args] (into-material-icon "TrendingUp" args))
(defn tune [& args] (into-material-icon "Tune" args))
(defn turned-in [& args] (into-material-icon "TurnedIn" args))
(defn turned-in-not [& args] (into-material-icon "TurnedInNot" args))
(defn tv [& args] (into-material-icon "Tv" args))
(defn unarchive [& args] (into-material-icon "Unarchive" args))
(defn undo [& args] (into-material-icon "Undo" args))
(defn unfold-less [& args] (into-material-icon "UnfoldLess" args))
(defn unfold-more [& args] (into-material-icon "UnfoldMore" args))
(defn update [& args] (into-material-icon "Update" args))
(defn usb [& args] (into-material-icon "Usb" args))
(defn verified-user [& args] (into-material-icon "VerifiedUser" args))
(defn vertical-align-bottom [& args] (into-material-icon "VerticalAlignBottom" args))
(defn vertical-align-center [& args] (into-material-icon "VerticalAlignCenter" args))
(defn vertical-align-top [& args] (into-material-icon "VerticalAlignTop" args))
(defn vibration [& args] (into-material-icon "Vibration" args))
(defn video-call [& args] (into-material-icon "VideoCall" args))
(defn video-label [& args] (into-material-icon "VideoLabel" args))
(defn video-library [& args] (into-material-icon "VideoLibrary" args))
(defn videocam [& args] (into-material-icon "Videocam" args))
(defn videocam-off [& args] (into-material-icon "VideocamOff" args))
(defn videogame-asset [& args] (into-material-icon "VideogameAsset" args))
(defn view-agenda [& args] (into-material-icon "ViewAgenda" args))
(defn view-array [& args] (into-material-icon "ViewArray" args))
(defn view-carousel [& args] (into-material-icon "ViewCarousel" args))
(defn view-column [& args] (into-material-icon "ViewColumn" args))
(defn view-comfy [& args] (into-material-icon "ViewComfy" args))
(defn view-compact [& args] (into-material-icon "ViewCompact" args))
(defn view-day [& args] (into-material-icon "ViewDay" args))
(defn view-headline [& args] (into-material-icon "ViewHeadline" args))
(defn view-list [& args] (into-material-icon "ViewList" args))
(defn view-module [& args] (into-material-icon "ViewModule" args))
(defn view-quilt [& args] (into-material-icon "ViewQuilt" args))
(defn view-stream [& args] (into-material-icon "ViewStream" args))
(defn view-week [& args] (into-material-icon "ViewWeek" args))
(defn vignette [& args] (into-material-icon "Vignette" args))
(defn visibility [& args] (into-material-icon "Visibility" args))
(defn visibility-off [& args] (into-material-icon "VisibilityOff" args))
(defn voice-chat [& args] (into-material-icon "VoiceChat" args))
(defn voicemail [& args] (into-material-icon "Voicemail" args))
(defn volume-down [& args] (into-material-icon "VolumeDown" args))
(defn volume-mute [& args] (into-material-icon "VolumeMute" args))
(defn volume-off [& args] (into-material-icon "VolumeOff" args))
(defn volume-up [& args] (into-material-icon "VolumeUp" args))
(defn vpn-key [& args] (into-material-icon "VpnKey" args))
(defn vpn-lock [& args] (into-material-icon "VpnLock" args))
(defn wallpaper [& args] (into-material-icon "Wallpaper" args))
(defn warning [& args] (into-material-icon "Warning" args))
(defn watch [& args] (into-material-icon "Watch" args))
(defn watch-later [& args] (into-material-icon "WatchLater" args))
(defn wb-auto [& args] (into-material-icon "WbAuto" args))
(defn wb-cloudy [& args] (into-material-icon "WbCloudy" args))
(defn wb-incandescent [& args] (into-material-icon "WbIncandescent" args))
(defn wb-iridescent [& args] (into-material-icon "WbIridescent" args))
(defn wb-sunny [& args] (into-material-icon "WbSunny" args))
(defn wc [& args] (into-material-icon "Wc" args))
(defn web [& args] (into-material-icon "Web" args))
(defn web-asset [& args] (into-material-icon "WebAsset" args))
(defn weekend [& args] (into-material-icon "Weekend" args))
(defn whatshot [& args] (into-material-icon "Whatshot" args))
(defn widgets [& args] (into-material-icon "Widgets" args))
(defn wifi [& args] (into-material-icon "Wifi" args))
(defn wifi-lock [& args] (into-material-icon "WifiLock" args))
(defn wifi-tethering [& args] (into-material-icon "WifiTethering" args))
(defn work [& args] (into-material-icon "Work" args))
(defn wrap-text [& args] (into-material-icon "WrapText" args))
(defn youtube-searched-for [& args] (into-material-icon "YoutubeSearchedFor" args))
(defn zoom-in [& args] (into-material-icon "ZoomIn" args))
(defn zoom-out [& args] (into-material-icon "ZoomOut" args))
(defn zoom-out-map [& args] (into-material-icon "ZoomOutMap" args))
